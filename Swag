Option Explicit

Sub GeneratePPTsPerDirector()

    '----- [1] PREPARE WORKSHEETS -----
    Dim wsPipeline As Worksheet
    Dim wsSales As Worksheet
    
    Set wsPipeline = ThisWorkbook.Sheets("New Plan Pipeline")
    Set wsSales = ThisWorkbook.Sheets("New Plan Sales")
    
    ' Create hidden "Helper" if it doesn't exist
    Dim wsHelper As Worksheet
    On Error Resume Next
    Set wsHelper = ThisWorkbook.Sheets("Helper")
    On Error GoTo 0
    If wsHelper Is Nothing Then
        Set wsHelper = ThisWorkbook.Worksheets.Add
        wsHelper.Name = "Helper"
        wsHelper.Visible = xlSheetHidden
    End If
    
    '----- [2] GATHER DIRECTORS FROM "New Plan Pipeline" -----
    Dim lastRow As Long
    lastRow = wsPipeline.Cells(wsPipeline.Rows.Count, "A").End(xlUp).Row
    
    Dim dictDirs As Object
    Set dictDirs = CreateObject("Scripting.Dictionary")
    
    Dim i As Long, dirName As String
    For i = 2 To lastRow
        dirName = Trim(wsPipeline.Cells(i, "B").Value)
        If dirName <> "" Then
            If Not dictDirs.Exists(dirName) Then dictDirs.Add dirName, dirName
        End If
    Next i
    
    '----- [3] PRE-COMPUTE TOTALS ACROSS ALL DIRECTORS FROM "New Plan Sales" -----
    Dim lastRowSales As Long
    lastRowSales = wsSales.Cells(wsSales.Rows.Count, "A").End(xlUp).Row
    
    Dim totalAllCount As Long
    Dim totalAllAUM As Double
    Dim totalAllParticipants As Long
    
    ' Columns (adjust if needed):
    '   A: Account Name
    '   C: Director
    '   D: Estimated Participants
    '   F: Total AUM (converted)
    For i = 2 To lastRowSales
        If Trim(wsSales.Cells(i, "A").Value) <> "" Then
            totalAllCount = totalAllCount + 1
        End If
        totalAllAUM = totalAllAUM + wsSales.Cells(i, "F").Value
        totalAllParticipants = totalAllParticipants + wsSales.Cells(i, "D").Value
    Next i
    
    '----- [4] PREPARE THINK-CELL AND POWERPOINT REFERENCES -----
    Dim tcXlAddIn As Object
    Set tcXlAddIn = Application.COMAddIns("thinkcell.addin").Object
    
    Dim ppApp As PowerPoint.Application
    Set ppApp = New PowerPoint.Application
    
    '----- [5] STAGE LABELS -----
    Dim stageLabels As Variant
    stageLabels = Array( _
        "Active Pursuit", _
        "Shortlisted / Decision Pending", _
        "Verbal Agreement", _
        "Contract Negotiation" _
    )
    
    '----- [6] LOOP THROUGH EACH DIRECTOR AND CREATE A PPT -----
    Dim director As Variant
    For Each director In dictDirs.Keys
        
        '--- (a) Reset the "New Plan Pipeline" stage counts for each Director ---
        Dim countStages(1 To 4) As Long
        countStages(1) = 0
        countStages(2) = 0
        countStages(3) = 0
        countStages(4) = 0
        
        ' Count deals by stage in "New Plan Pipeline"
        For i = 2 To lastRow
            If Trim(wsPipeline.Cells(i, "B").Value) = director Then
                Select Case Trim(wsPipeline.Cells(i, "E").Value)
                    Case "Active Pursuit"
                        countStages(1) = countStages(1) + 1
                    Case "Shortlisted / Decision Pending"
                        countStages(2) = countStages(2) + 1
                    Case "Verbal Agreement"
                        countStages(3) = countStages(3) + 1
                    Case "Contract Negotiation"
                        countStages(4) = countStages(4) + 1
                End Select
            End If
        Next i
        
        ' Fill helper sheet for the think-cell chart, leaving col A blank
        With wsHelper
            ' Row 1: Stage labels
            .Range("A1").Value = ""
            .Range("B1").Value = stageLabels(0)
            .Range("C1").Value = stageLabels(1)
            .Range("D1").Value = stageLabels(2)
            .Range("E1").Value = stageLabels(3)
            
            ' Row 3: Counts
            .Range("A3").Value = ""
            .Range("B3").Value = countStages(1)
            .Range("C3").Value = countStages(2)
            .Range("D3").Value = countStages(3)
            .Range("E3").Value = countStages(4)
        End With
        
        '--- (b) Reset and compute this Directorâ€™s "New Plan Sales" data ---
        Dim directorCount As Long
        Dim directorAUM As Double
        Dim directorParticipants As Long
        
        directorCount = 0
        directorAUM = 0
        directorParticipants = 0
        
        For i = 2 To lastRowSales
            If Trim(wsSales.Cells(i, "C").Value) = director Then
                If Trim(wsSales.Cells(i, "A").Value) <> "" Then
                    directorCount = directorCount + 1
                End If
                directorAUM = directorAUM + wsSales.Cells(i, "F").Value
                directorParticipants = directorParticipants + wsSales.Cells(i, "D").Value
            End If
        Next i
        
        '--- (c) Open the PowerPoint template invisibly ---
        Dim pres As PowerPoint.Presentation
        Set pres = ppApp.Presentations.Open( _
            Filename:="C:\TemplateFolder\template1.pptx", _
            WithWindow:=msoFalse)
        
        '--- (d) Update Chart1 on slide 2 ---
        Dim rngData As Range
        Set rngData = wsHelper.Range("A1:E3")
        tcXlAddIn.UpdateChart pres.Slides(2), "Chart1", rngData, False
        
        '--- (e) Slide 1 text boxes for Director & Quarter ---
        Dim currentQuarter As String
        currentQuarter = "Q" & CStr(Int((Month(Date) - 1) / 3 + 1)) & " " & Year(Date)
        
        With pres.Slides(1)
            .Shapes("Title").TextFrame.TextRange.Text = director
            .Shapes("Quarter").TextFrame.TextRange.Text = currentQuarter
        End With
        
        '--- (f) Slide 2 table "Table 5" (4x4) ---
        Dim shpTable As PowerPoint.Shape
        Set shpTable = pres.Slides(2).Shapes("Table 5")
        
        ' Row2: count of accounts, total count, percent
        shpTable.Table.Cell(2, 2).Shape.TextFrame.TextRange.Text = CStr(directorCount)
        shpTable.Table.Cell(2, 3).Shape.TextFrame.TextRange.Text = CStr(totalAllCount)
        If totalAllCount > 0 Then
            shpTable.Table.Cell(2, 4).Shape.TextFrame.TextRange.Text = _
                Format(directorCount / totalAllCount, "0.0%")
        Else
            shpTable.Table.Cell(2, 4).Shape.TextFrame.TextRange.Text = "N/A"
        End If
        
        ' Row3: total AUM, total AUM all directors, percent
        shpTable.Table.Cell(3, 2).Shape.TextFrame.TextRange.Text = _
            Format(directorAUM / 1E9, "$0.00") & "B"
        shpTable.Table.Cell(3, 3).Shape.TextFrame.TextRange.Text = _
            Format(totalAllAUM / 1E9, "$0.00") & "B"
        If totalAllAUM > 0 Then
            shpTable.Table.Cell(3, 4).Shape.TextFrame.TextRange.Text = _
                Format(directorAUM / totalAllAUM, "0.0%")
        Else
            shpTable.Table.Cell(3, 4).Shape.TextFrame.TextRange.Text = "N/A"
        End If
        
        ' Row4: participants, total participants, percent
        shpTable.Table.Cell(4, 2).Shape.TextFrame.TextRange.Text = CStr(directorParticipants)
        shpTable.Table.Cell(4, 3).Shape.TextFrame.TextRange.Text = CStr(totalAllParticipants)
        If totalAllParticipants > 0 Then
            shpTable.Table.Cell(4, 4).Shape.TextFrame.TextRange.Text = _
                Format(directorParticipants / totalAllParticipants, "0.0%")
        Else
            shpTable.Table.Cell(4, 4).Shape.TextFrame.TextRange.Text = "N/A"
        End If
        
        '--- (g) Save & Close this PPT ---
        pres.SaveAs "C:\OutputPPTs\" & director & "_Pipeline.pptx"
        pres.Close
    Next director
    
    '----- [7] CLEAN UP -----
    ppApp.Quit
    MsgBox "All PowerPoints generated successfully."

End Sub
