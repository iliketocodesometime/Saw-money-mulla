Option Explicit

Sub UpdateChartsForDirectors()

    Dim wb As Workbook: Set wb = ThisWorkbook
    Dim ws As Worksheet: Set ws = wb.Sheets("New Plan Sales")
    
    ' Identify the last row of data in column A
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    
    ' Define a "body range" that EXCLUDES the header row (A2:E...)
    Dim rngDataBody As Range
    Set rngDataBody = ws.Range("A2:E" & lastRow)
    
    ' Collect unique Directors (column B is the second column of the sheet overall)
    Dim dictDir As Object: Set dictDir = CreateObject("Scripting.Dictionary")
    Dim cell As Range
    For Each cell In ws.Range("B2:B" & lastRow)
        If Not IsEmpty(cell.Value) Then
            If Not dictDir.Exists(cell.Value) Then dictDir.Add cell.Value, True
        End If
    Next cell
    
    ' Get the Think-Cell add-in
    Dim tcXlAddIn As Object
    Set tcXlAddIn = Application.COMAddIns("thinkcell.addin").Object
    
    ' Create a PowerPoint application (late binding)
    Dim ppApp As Object
    Set ppApp = CreateObject("PowerPoint.Application")
    
    ' Variables for the loop
    Dim dirName As Variant
    Dim rngFilter As Range
    Dim pres As Object   ' late binding for PowerPoint.Presentation
    
    ' Loop each unique Director
    For Each dirName In dictDir.Keys
        
        ' Clear any existing filters, then filter the body range by Director (2nd column => Field:=2)
        ws.AutoFilterMode = False
        rngDataBody.AutoFilter Field:=2, Criteria1:=dirName
        
        ' Grab the visible cells in rngDataBody
        On Error Resume Next
        Set rngFilter = rngDataBody.SpecialCells(xlCellTypeVisible)
        On Error GoTo 0
        
        If Not rngFilter Is Nothing Then
            
            ' Remove old TempChartData if it exists
            On Error Resume Next
            Application.DisplayAlerts = False
            If Not wb.Worksheets("TempChartData") Is Nothing Then
                wb.Worksheets("TempChartData").Delete
            End If
            Application.DisplayAlerts = True
            On Error GoTo 0
            
            ' Create a fresh TempChartData sheet
            Dim wsTemp As Worksheet
            Set wsTemp = wb.Worksheets.Add
            wsTemp.Name = "TempChartData"
            
            ' Dictionary to count deals by Stage (Stage is column E => 5th column in A:E)
            Dim dictStage As Object: Set dictStage = CreateObject("Scripting.Dictionary")
            
            Dim r As Range, stg As Variant
            
            ' Loop through the visible cells in the 5th column of rngFilter
            For Each r In rngFilter.Columns(5).Cells
                If Not IsEmpty(r.Value) Then
                    stg = r.Value
                    If dictStage.Exists(stg) Then
                        dictStage(stg) = dictStage(stg) + 1
                    Else
                        dictStage.Add stg, 1
                    End If
                End If
            Next r
            
            ' Build a 2-row table in TempChartData
            ' Row 1 => Stage Names, Row 2 => Counts
            Dim i As Long: i = 1
            Dim key As Variant
            For Each key In dictStage.Keys
                wsTemp.Cells(1, i).Value = key
                wsTemp.Cells(2, i).Value = dictStage(key)
                i = i + 1
            Next key
            
            ' Only update Think-Cell if we have at least one stage
            If dictStage.Count > 0 Then
                
                Dim rngChart As Range
                Set rngChart = wsTemp.Range(wsTemp.Cells(1, 1), wsTemp.Cells(2, dictStage.Count))
                
                ' Open the PowerPoint template
                Set pres = ppApp.Presentations.Open("C:\Samples\UpdateChart\template.pptx")
                
                ' Update Think-Cell chart named "Chart1"
                tcXlAddIn.UpdateChart pres, "Chart1", rngChart, False
                
                ' Save & Close
                pres.SaveAs "C:\Samples\UpdateChart\" & dirName & "_updated.pptx"
                pres.Close
            End If
            
            ' Turn off filter for next iteration
            ws.AutoFilterMode = False
            Set rngFilter = Nothing
        End If
    Next dirName
    
    ' Finally, quit PowerPoint
    ppApp.Quit
    
    MsgBox "All Director-specific presentations have been created.", vbInformation

End Sub
