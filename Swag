Option Explicit

Sub GeneratePPTsPerDirector()

    '--------------------------------------------------------------------------------
    '  [1] WORKSHEETS + HELPER SHEET
    '--------------------------------------------------------------------------------
    Dim wsPipeline As Worksheet, wsSales As Worksheet, wsCrossSell As Worksheet
    On Error Resume Next
    Set wsPipeline = ThisWorkbook.Sheets("New Plan Pipeline")
    Set wsSales = ThisWorkbook.Sheets("New Plan Sales")
    Set wsCrossSell = ThisWorkbook.Sheets("Cross Sell Closed Won")
    On Error GoTo 0
    
    If wsPipeline Is Nothing Or wsSales Is Nothing Or wsCrossSell Is Nothing Then
        MsgBox "Missing one or more required sheets (New Plan Pipeline, New Plan Sales, Cross Sell Closed Won)."
        Exit Sub
    End If
    
    ' Create hidden "Helper" if it doesn't exist (for Think-Cell chart data)
    Dim wsHelper As Worksheet
    On Error Resume Next
    Set wsHelper = ThisWorkbook.Sheets("Helper")
    On Error GoTo 0
    If wsHelper Is Nothing Then
        Set wsHelper = ThisWorkbook.Worksheets.Add
        wsHelper.Name = "Helper"
        wsHelper.Visible = xlSheetHidden
    End If

    '--------------------------------------------------------------------------------
    '  [2] GATHER DIRECTORS (from "New Plan Pipeline" col B)
    '--------------------------------------------------------------------------------
    Dim lastRow As Long
    lastRow = wsPipeline.Cells(wsPipeline.Rows.Count, "A").End(xlUp).Row
    
    Dim dictDirs As Object
    Set dictDirs = CreateObject("Scripting.Dictionary")
    
    Dim i As Long
    Dim dirName As String
    For i = 2 To lastRow
        dirName = Trim(wsPipeline.Cells(i, "B").Value)
        If dirName <> "" Then
            If Not dictDirs.Exists(dirName) Then dictDirs.Add dirName, dirName
        End If
    Next i
    
    '--------------------------------------------------------------------------------
    '  [3] PRE-COMPUTE TOTALS ACROSS ALL DIRECTORS
    '       a) FROM "New Plan Sales"
    '       b) FROM "Cross Sell Closed Won" FOR OPPORTUNITY TYPES
    '--------------------------------------------------------------------------------
    Dim lastRowSales As Long
    lastRowSales = wsSales.Cells(wsSales.Rows.Count, "A").End(xlUp).Row
    
    Dim totalAllCount As Long
    Dim totalAllAUM As Double
    Dim totalAllParticipants As Long
    
    ' [3a] New Plan Sales (Cols: A=Account Name, C=Director, D=Estimated Participants, F=Total AUM)
    For i = 2 To lastRowSales
        If Trim(wsSales.Cells(i, "A").Value) <> "" Then
            totalAllCount = totalAllCount + 1
        End If
        totalAllAUM = totalAllAUM + wsSales.Cells(i, "F").Value
        totalAllParticipants = totalAllParticipants + wsSales.Cells(i, "D").Value
    Next i
    
    ' [3b] Cross Sell Closed Won (Cols: A=Director, B=Opp Name, C=Opp Record Type, D=Close Date, E=Stage)
    '      We'll track total closed-won across ALL directors for each of the 5 Opportunity Types
    '      in the order that matches the Slide 3 table columns: 2..6
    
    ' Opportunity types in the exact order needed for Slide 3 table:
    Dim opportunityType(1 To 5) As String
    opportunityType(1) = "Charitable Giving Opportunity"
    opportunityType(2) = "Corporate Cash Opportunity"
    opportunityType(3) = "Institutional Consulting Opportunity"
    opportunityType(4) = "Non-Qualified Deferred Compensation Opportunity"
    opportunityType(5) = "Retirement Opportunity"
    
    Dim totalOppCounts(1 To 5) As Long ' For all directors
    Dim lastRowCross As Long
    lastRowCross = wsCrossSell.Cells(wsCrossSell.Rows.Count, "A").End(xlUp).Row
    
    For i = 2 To lastRowCross
        Dim oppTypeAll As String
        oppTypeAll = Trim(wsCrossSell.Cells(i, "C").Value) ' "Opportunity Record Type"
        
        Dim idx As Long
        For idx = 1 To 5
            If oppTypeAll = opportunityType(idx) Then
                totalOppCounts(idx) = totalOppCounts(idx) + 1
            End If
        Next idx
    Next i
    
    '--------------------------------------------------------------------------------
    '  [4] PREPARE THINK-CELL & POWERPOINT REFERENCES
    '--------------------------------------------------------------------------------
    Dim tcXlAddIn As Object
    On Error Resume Next
    Set tcXlAddIn = Application.COMAddIns("thinkcell.addin").Object
    On Error GoTo 0
    ' If Think-Cell is not installed, tcXlAddIn remains Nothing.
    
    Dim ppApp As PowerPoint.Application
    Set ppApp = New PowerPoint.Application
    
    '--------------------------------------------------------------------------------
    '  [5] DEFINE STAGE LABELS FOR "New Plan Pipeline"
    '--------------------------------------------------------------------------------
    Dim stageLabels As Variant
    stageLabels = Array( _
        "Active Pursuit", _
        "Shortlisted / Decision Pending", _
        "Verbal Agreement", _
        "Contract Negotiation" _
    )
    
    '--------------------------------------------------------------------------------
    '  [6] FOR EACH DIRECTOR, GENERATE A PPT
    '--------------------------------------------------------------------------------
    Dim director As Variant
    For Each director In dictDirs.Keys
        
        '=== (a) RESET ARRAYS FOR STAGE COUNTS (Think-Cell Chart1) ===
        Dim countStages(1 To 4) As Long
        countStages(1) = 0: countStages(2) = 0
        countStages(3) = 0: countStages(4) = 0
        
        '=== (b) ARRAYS FOR CROSS SELL CLOSED WON (OPP TYPES) FOR THIS DIRECTOR ===
        Dim dirOppCounts(1 To 5) As Long
        
        '=== (c) LOOP OVER "New Plan Pipeline" FOR THIS DIRECTOR ===
        For i = 2 To lastRow
            If Trim(wsPipeline.Cells(i, "B").Value) = director Then
                Dim currentStage As String
                currentStage = Trim(wsPipeline.Cells(i, "E").Value)
                
                Select Case currentStage
                    Case "Active Pursuit"
                        countStages(1) = countStages(1) + 1
                    Case "Shortlisted / Decision Pending"
                        countStages(2) = countStages(2) + 1
                    Case "Verbal Agreement"
                        countStages(3) = countStages(3) + 1
                    Case "Contract Negotiation"
                        countStages(4) = countStages(4) + 1
                End Select
            End If
        Next i
        
        '=== (d) FILL HELPER FOR THINK-CELL "Chart1" (ROWS 1..3) ===
        If Not tcXlAddIn Is Nothing Then
            With wsHelper
                ' Row 1: Stage labels
                .Range("A1").Value = ""
                .Range("B1").Value = stageLabels(0)
                .Range("C1").Value = stageLabels(1)
                .Range("D1").Value = stageLabels(2)
                .Range("E1").Value = stageLabels(3)
                
                ' Row 3: # in stage (counts)
                .Range("A3").Value = ""
                .Range("B3").Value = countStages(1)
                .Range("C3").Value = countStages(2)
                .Range("D3").Value = countStages(3)
                .Range("E3").Value = countStages(4)
            End With
        End If
        
        '=== (e) DIRECTOR-SPECIFIC "NEW PLAN SALES" DATA (FOR TABLE 5) ===
        Dim directorCount As Long, directorAUM As Double, directorParticipants As Long
        directorCount = 0
        directorAUM = 0
        directorParticipants = 0
        
        Dim lastRowSales2 As Long
        lastRowSales2 = wsSales.Cells(wsSales.Rows.Count, "A").End(xlUp).Row
        
        For i = 2 To lastRowSales2
            If Trim(wsSales.Cells(i, "C").Value) = director Then
                If Trim(wsSales.Cells(i, "A").Value) <> "" Then
                    directorCount = directorCount + 1
                End If
                directorAUM = directorAUM + wsSales.Cells(i, "F").Value
                directorParticipants = directorParticipants + wsSales.Cells(i, "D").Value
            End If
        Next i
        
        '=== (f) DIRECTOR-SPECIFIC CROSS SELL CLOSED WON ===
        Dim lastRowCross2 As Long
        lastRowCross2 = wsCrossSell.Cells(wsCrossSell.Rows.Count, "A").End(xlUp).Row
        
        For i = 2 To lastRowCross2
            If Trim(wsCrossSell.Cells(i, "A").Value) = director Then
                Dim oppTypeDir As String
                oppTypeDir = Trim(wsCrossSell.Cells(i, "C").Value) ' Opp Record Type
                
                Dim j As Long
                For j = 1 To 5
                    If oppTypeDir = opportunityType(j) Then
                        dirOppCounts(j) = dirOppCounts(j) + 1
                    End If
                Next j
            End If
        Next i
        
        '=== (g) OPEN PPT TEMPLATE INVISIBLY ===
        Dim pres As PowerPoint.Presentation
        Set pres = ppApp.Presentations.Open( _
            Filename:="C:\TemplateFolder\template1.pptx", _
            WithWindow:=msoFalse)
        
        '=== (h) UPDATE THINK-CELL Chart1 (if installed) ===
        If Not tcXlAddIn Is Nothing Then
            Dim rngData As Range
            Set rngData = wsHelper.Range("A1:E3")
            tcXlAddIn.UpdateChart pres.Slides(2), "Chart1", rngData, False
        End If
        
        '=== (i) SLIDE 1: DIRECTOR & QUARTER ===
        Dim currentQuarter As String
        currentQuarter = "Q" & CStr(Int((Month(Date) - 1) / 3 + 1)) & " " & Year(Date)
        
        With pres.Slides(1)
            .Shapes("Title").TextFrame.TextRange.Text = director
            .Shapes("Quarter").TextFrame.TextRange.Text = currentQuarter
        End With
        
        '=== (j) SLIDE 2: TABLE 5 (4x4) ===
        Dim shpTable As PowerPoint.Shape
        Set shpTable = pres.Slides(2).Shapes("Table 5")
        
        ' Row2: # of accounts, total #, percent
        shpTable.Table.Cell(2, 2).Shape.TextFrame.TextRange.Text = CStr(directorCount)
        shpTable.Table.Cell(2, 3).Shape.TextFrame.TextRange.Text = CStr(totalAllCount)
        If totalAllCount > 0 Then
            shpTable.Table.Cell(2, 4).Shape.TextFrame.TextRange.Text = _
                Format(directorCount / totalAllCount, "0.0%")
        Else
            shpTable.Table.Cell(2, 4).Shape.TextFrame.TextRange.Text = "N/A"
        End If
        
        ' Row3: total AUM, total AUM all directors, percent
        shpTable.Table.Cell(3, 2).Shape.TextFrame.TextRange.Text = _
            Format(directorAUM / 1E9, "$0.00") & "B"
        shpTable.Table.Cell(3, 3).Shape.TextFrame.TextRange.Text = _
            Format(totalAllAUM / 1E9, "$0.00") & "B"
        If totalAllAUM > 0 Then
            shpTable.Table.Cell(3, 4).Shape.TextFrame.TextRange.Text = _
                Format(directorAUM / totalAllAUM, "0.0%")
        Else
            shpTable.Table.Cell(3, 4).Shape.TextFrame.TextRange.Text = "N/A"
        End If
        
        ' Row4: participants, total participants, percent
        shpTable.Table.Cell(4, 2).Shape.TextFrame.TextRange.Text = CStr(directorParticipants)
        shpTable.Table.Cell(4, 3).Shape.TextFrame.TextRange.Text = CStr(totalAllParticipants)
        If totalAllParticipants > 0 Then
            shpTable.Table.Cell(4, 4).Shape.TextFrame.TextRange.Text = _
                Format(directorParticipants / totalAllParticipants, "0.0%")
        Else
            shpTable.Table.Cell(4, 4).Shape.TextFrame.TextRange.Text = "N/A"
        End If
        
        '=== (k) SLIDE 2: CHART 13 (if it exists) ===
        Dim shpChart As PowerPoint.Shape
        On Error Resume Next
        Set shpChart = pres.Slides(2).Shapes("Chart 13")
        On Error GoTo 0
        
        If Not shpChart Is Nothing Then
            If shpChart.HasChart Then
                Dim ppChart As PowerPoint.Chart
                Set ppChart = shpChart.Chart
                ppChart.ChartData.Activate
                
                Dim wbChart As Excel.Workbook
                Set wbChart = ppChart.ChartData.Workbook
                Dim wsChart As Excel.Worksheet
                Set wsChart = wbChart.Worksheets(1)
                
                ' Example layout in wsChart:
                wsChart.Range("A1:D1").Value = Array("Stage", "# in Stage", "Estimated AUM", "Est. Participants")
                ' ... fill your stage data as desired ...
                
                ' Close + Refresh so data is visible immediately
                ppChart.ChartData.Workbook.Close True
                ppChart.Refresh
                DoEvents
            End If
        End If
        
        '=== (l) SLIDE 3: TABLE 3 (4x6) CROSS SELL CLOSED WON ===
        '   R1C2..R1C6: Opportunity Type
        '   R2C2..R2C6: All directors total ( totalOppCounts )
        '   R3C2..R3C6: Director-specific ( dirOppCounts )
        '   R4C2..R4C6: % of channel = row3 / row2
        Dim shpTable3 As PowerPoint.Shape
        On Error Resume Next
        Set shpTable3 = pres.Slides(3).Shapes("Table 3")
        On Error GoTo 0
        
        If Not shpTable3 Is Nothing Then
            ' Row 1, columns 2..6: Opportunity Type
            Dim colIndex As Long
            For colIndex = 2 To 6
                shpTable3.Table.Cell(1, colIndex).Shape.TextFrame.TextRange.Text = _
                    opportunityType(colIndex - 1)
            Next colIndex
            
            ' Row 2, columns 2..6: totalOppCounts
            For colIndex = 2 To 6
                shpTable3.Table.Cell(2, colIndex).Shape.TextFrame.TextRange.Text = _
                    CStr(totalOppCounts(colIndex - 1))
            Next colIndex
            
            ' Row 3, columns 2..6: dirOppCounts
            For colIndex = 2 To 6
                shpTable3.Table.Cell(3, colIndex).Shape.TextFrame.TextRange.Text = _
                    CStr(dirOppCounts(colIndex - 1))
            Next colIndex
            
            ' Row 4, columns 2..6: % of channel = row3 / row2
            For colIndex = 2 To 6
                Dim valAll As Long
                valAll = totalOppCounts(colIndex - 1)
                
                Dim valDir As Long
                valDir = dirOppCounts(colIndex - 1)
                
                If valAll > 0 Then
                    shpTable3.Table.Cell(4, colIndex).Shape.TextFrame.TextRange.Text = _
                        Format(valDir / valAll, "0.0%")
                Else
                    shpTable3.Table.Cell(4, colIndex).Shape.TextFrame.TextRange.Text = "0%"
                End If
            Next colIndex
        End If
        
        '=== (m) SAVE & CLOSE THIS PPT ===
        pres.SaveAs "C:\OutputPPTs\" & director & "_Pipeline.pptx"
        pres.Close
    Next director
    
    '--------------------------------------------------------------------------------
    '  [7] CLEANUP
    '--------------------------------------------------------------------------------
    ppApp.Quit
    MsgBox "All PowerPoints generated successfully!"

End Sub
