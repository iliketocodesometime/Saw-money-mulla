Option Explicit
'==================================================================================
'  HELPER FUNCTIONS  (one copy only)
'==================================================================================
'--- column finder ----------------------------------------------------------------
Private Function FindColumnIndex(ws As Worksheet, ByVal headerName As String) As Long
    Dim lastCol As Long: lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    Dim c As Long
    For c = 1 To lastCol
        If Trim$(UCase$(ws.Cells(1, c).Value)) = UCase$(headerName) Then
            FindColumnIndex = c
            Exit Function
        End If
    Next c
    FindColumnIndex = 0
End Function

'--- cross‑sell opportunity → index ----------------------------------------------
Private Function MatchOppTypeIndex(ByVal oppType As String, ByVal arrOpp() As String) As Long
    Dim i As Long
    For i = LBound(arrOpp) To UBound(arrOpp)
        If oppType = arrOpp(i) Then
            MatchOppTypeIndex = i - LBound(arrOpp) + 1: Exit Function
        End If
    Next i
End Function

'--- pipeline stage → index -------------------------------------------------------
Private Function MatchStageIndex(ByVal stageName As String, ByVal arrStg() As String) As Long
    Dim j As Long
    For j = LBound(arrStg) To UBound(arrStg)
        If stageName = arrStg(j) Then
            MatchStageIndex = j - LBound(arrStg) + 1: Exit Function
        End If
    Next j
End Function

'--- GAS business line → index ----------------------------------------------------
Private Function MatchGASIndex(ByVal busLine As String, ByVal arrGAS() As String) As Long
    Dim k As Long
    For k = LBound(arrGAS) To UBound(arrGAS)
        If busLine = arrGAS(k) Then
            MatchGASIndex = k - LBound(arrGAS) + 1: Exit Function
        End If
    Next k
End Function

'--- director validity ------------------------------------------------------------
Private Function IsDirectorValid(ByVal dirStr As String) As Boolean
    Dim t As String: t = Trim$(dirStr)
    IsDirectorValid = (t <> "" And t <> "-" And UCase$(t) <> "HOME OFFICE")
End Function

'--- blank‑if‑zero (for Think‑Cell) ----------------------------------------------
Private Function BlankIfZero(ByVal n) As Variant
    If n = 0 Then BlankIfZero = "" Else BlankIfZero = n
End Function
'==================================================================================
'  MAIN MACRO
'==================================================================================
Sub GeneratePPTsPerDirector()

    '----------------------------------------------------------------------
    ' (1) Sheet objects
    '----------------------------------------------------------------------
    Dim wsPipeline As Worksheet, wsSales As Worksheet
    Dim wsCrossSell As Worksheet, wsCrossSellPipe As Worksheet
    Dim wsUpsellClosed As Worksheet, wsClientIndex As Worksheet
    
    On Error Resume Next
    Set wsPipeline = ThisWorkbook.Sheets("New Plan Pipeline")
    Set wsSales = ThisWorkbook.Sheets("New Plan Sales")
    Set wsCrossSell = ThisWorkbook.Sheets("Cross Sell Closed Won")
    Set wsCrossSellPipe = ThisWorkbook.Sheets("Cross Sell Pipeline")
    Set wsUpsellClosed = ThisWorkbook.Sheets("Upsell Closed Won")
    Set wsClientIndex = ThisWorkbook.Sheets("Client Index")
    On Error GoTo 0
    
    If wsPipeline Is Nothing Or wsSales Is Nothing Or _
       wsCrossSell Is Nothing Or wsCrossSellPipe Is Nothing Then
        MsgBox "Required sheets missing.": Exit Sub
    End If
    
    '----------------------------------------------------------------------
    ' (2) Helper sheet
    '----------------------------------------------------------------------
    Dim wsHelper As Worksheet
    On Error Resume Next: Set wsHelper = ThisWorkbook.Sheets("Helper"): On Error GoTo 0
    If wsHelper Is Nothing Then
        Set wsHelper = ThisWorkbook.Worksheets.Add
        wsHelper.Name = "Helper": wsHelper.Visible = xlSheetHidden
    End If
    
    '----------------------------------------------------------------------
    ' (3) Column indexes
    '----------------------------------------------------------------------
    '--- Pipeline
    Dim colDirPipe&, colStagePipe&, colAUMPipe&, colPartPipe&
    colDirPipe = FindColumnIndex(wsPipeline, "Director")
    colStagePipe = FindColumnIndex(wsPipeline, "Stage")
    colAUMPipe = FindColumnIndex(wsPipeline, "Estimated AUM")
    colPartPipe = FindColumnIndex(wsPipeline, "Estimated Participants")
    If colDirPipe * colStagePipe * colAUMPipe * colPartPipe = 0 Then
        MsgBox "Headers missing in New Plan Pipeline.": Exit Sub
    End If
    
    '--- Sales
    Dim colAccSales&, colDirSales&, colPartSales&, colAUMSales&
    Dim colCloseSales&, colStageSales&, colAUMAcctSales&
    colAccSales = FindColumnIndex(wsSales, "Account Name")
    colDirSales = FindColumnIndex(wsSales, "Director")
    colPartSales = FindColumnIndex(wsSales, "Estimated Participants")
    colAUMSales = FindColumnIndex(wsSales, "Total AUM (converted)")
    colCloseSales = FindColumnIndex(wsSales, "Close Date")
    colStageSales = FindColumnIndex(wsSales, "Stage")
    colAUMAcctSales = FindColumnIndex(wsSales, "Estimated AUM (Account)")
    If colAccSales * colDirSales * colPartSales * colAUMSales = 0 Or _
       colCloseSales * colStageSales * colAUMAcctSales = 0 Then
        MsgBox "Headers missing in New Plan Sales.": Exit Sub
    End If
    
    '--- Cross‑Sell Closed Won
    Dim colDirCSC&, colOppCSC&, colStageCSC&
    colDirCSC = FindColumnIndex(wsCrossSell, "Director")
    colOppCSC = FindColumnIndex(wsCrossSell, "Opportunity Record Type")
    colStageCSC = FindColumnIndex(wsCrossSell, "Stage")
    If colDirCSC * colOppCSC * colStageCSC = 0 Then
        MsgBox "Headers missing in Cross Sell Closed Won.": Exit Sub
    End If
    
    '--- Cross‑Sell Pipeline
    Dim colDirCSP&, colOppCSP&, colStageCSP&
    colDirCSP = FindColumnIndex(wsCrossSellPipe, "Director")
    colOppCSP = FindColumnIndex(wsCrossSellPipe, "Opportunity Record Type")
    colStageCSP = FindColumnIndex(wsCrossSellPipe, "Stage")
    If colDirCSP * colOppCSP * colStageCSP = 0 Then
        MsgBox "Headers missing in Cross Sell Pipeline.": Exit Sub
    End If
    
    '--- Upsell
    Dim upsellAvail As Boolean: upsellAvail = Not wsUpsellClosed Is Nothing
    Dim colDirUp&, colLineUp&, colStageUp&
    If upsellAvail Then
        colDirUp = FindColumnIndex(wsUpsellClosed, "Director")
        colLineUp = FindColumnIndex(wsUpsellClosed, "GAS Business Line")
        colStageUp = FindColumnIndex(wsUpsellClosed, "Opportunity: Stage")
        If colDirUp * colLineUp * colStageUp = 0 Then upsellAvail = False
    End If
    
    '----------------------------------------------------------------------
    ' (4) Director list  (Pipeline + Client Index)
    '----------------------------------------------------------------------
    Dim dict As Object: Set dict = CreateObject("Scripting.Dictionary")
    Dim r&, lastRow&: lastRow = wsPipeline.Cells(wsPipeline.Rows.Count, 1).End(xlUp).Row
    For r = 2 To lastRow
        If IsDirectorValid(wsPipeline.Cells(r, colDirPipe).Value) Then
            dict(wsPipeline.Cells(r, colDirPipe).Value) = 1
        End If
    Next r
    If Not wsClientIndex Is Nothing Then
        Dim colDirCI&: colDirCI = FindColumnIndex(wsClientIndex, "Director")
        If colDirCI > 0 Then
            lastRow = wsClientIndex.Cells(wsClientIndex.Rows.Count, 1).End(xlUp).Row
            For r = 2 To lastRow
                If IsDirectorValid(wsClientIndex.Cells(r, colDirCI).Value) Then
                    dict(wsClientIndex.Cells(r, colDirCI).Value) = 1
                End If
            Next r
        End If
    End If
    
    '----------------------------------------------------------------------
    ' (5) Pre‑compute “all‑director” totals for slide 2
    '----------------------------------------------------------------------
    Dim totAcc&, totPart&, totAUM#
    lastRow = wsSales.Cells(wsSales.Rows.Count, 1).End(xlUp).Row
    For r = 2 To lastRow
        If IsDirectorValid(wsSales.Cells(r, colDirSales).Value) Then
            If Trim$(wsSales.Cells(r, colAccSales).Value) <> "" Then totAcc = totAcc + 1
            totPart = totPart + Val(wsSales.Cells(r, colPartSales).Value)
            totAUM = totAUM + Val(wsSales.Cells(r, colAUMSales).Value)
        End If
    Next r
    
    '----------------------------------------------------------------------
    ' (6) Static arrays
    '----------------------------------------------------------------------
    Dim stageLbl(): stageLbl = Array("Active Pursuit", "Shortlisted / Decision Pending", _
                                     "Verbal Agreement", "Contract Negotiation")
    Dim oppTypes(): oppTypes = Array("Charitable Giving Opportunity", "Corporate Cash Opportunity", _
                                     "Institutional Consulting Opportunity", "Non-Qualified Deferred Compensation Opportunity", _
                                     "Retirement Opportunity")
    Dim gasArr(): gasArr = Array("Advanced Solutions", "Financial Reporting", "Global Intelligence")
    
    ' cross‑sell totals
    Dim totCS(1 To 5) As Long
    lastRow = wsCrossSell.Cells(wsCrossSell.Rows.Count, 1).End(xlUp).Row
    For r = 2 To lastRow
        If Trim$(wsCrossSell.Cells(r, colStageCSC).Value) = "Closed Won" And _
           IsDirectorValid(wsCrossSell.Cells(r, colDirCSC).Value) Then
            Dim idx&: idx = MatchOppTypeIndex(Trim$(wsCrossSell.Cells(r, colOppCSC).Value), oppTypes)
            If idx > 0 Then totCS(idx) = totCS(idx) + 1
        End If
    Next r
    
    ' upsell totals
    Dim totUp(1 To 3) As Long, lastUp&
    If upsellAvail Then
        lastUp = wsUpsellClosed.Cells(wsUpsellClosed.Rows.Count, 1).End(xlUp).Row
        For r = 2 To lastUp
            If Trim$(wsUpsellClosed.Cells(r, colStageUp).Value) = "Closed Won" And _
               IsDirectorValid(wsUpsellClosed.Cells(r, colDirUp).Value) Then
                idx = MatchGASIndex(Trim$(wsUpsellClosed.Cells(r, colLineUp).Value), gasArr)
                If idx > 0 Then totUp(idx) = totUp(idx) + 1
            End If
        Next r
    End If
    
    '----------------------------------------------------------------------
    ' (7) Think‑Cell & PowerPoint handles
    '----------------------------------------------------------------------
    Dim tc As Object: On Error Resume Next
    Set tc = Application.COMAddIns("thinkcell.addin").Object: On Error GoTo 0
    
    Dim ppApp As PowerPoint.Application: Set ppApp = New PowerPoint.Application
    
    '======================================================================
    ' (8) LOOP THROUGH EACH DIRECTOR
    '======================================================================
    Dim dir
    For Each dir In dict.Keys
        
        '--------------------------------------------------------------
        ' 8A. Pipeline stage counts for this director
        '--------------------------------------------------------------
        Dim stCnt(1 To 4) As Long, stAUM(1 To 4) As Double, stPart(1 To 4) As Long
        lastRow = wsPipeline.Cells(wsPipeline.Rows.Count, 1).End(xlUp).Row
        For r = 2 To lastRow
            If Trim$(wsPipeline.Cells(r, colDirPipe).Value) = dir Then
                idx = MatchStageIndex(Trim$(wsPipeline.Cells(r, colStagePipe).Value), stageLbl)
                If idx > 0 Then
                    stCnt(idx) = stCnt(idx) + 1
                    stAUM(idx) = stAUM(idx) + Val(wsPipeline.Cells(r, colAUMPipe).Value)
                    stPart(idx) = stPart(idx) + Val(wsPipeline.Cells(r, colPartPipe).Value)
                End If
            End If
        Next r
        
        '--------------------------------------------------------------
        ' 8B. Sales totals for this director  (slide 2 numeric table)
        '--------------------------------------------------------------
        Dim dAcc&, dPart&, dAUM#
        lastRow = wsSales.Cells(wsSales.Rows.Count, 1).End(xlUp).Row
        For r = 2 To lastRow
            If Trim$(wsSales.Cells(r, colDirSales).Value) = dir Then
                If Trim$(wsSales.Cells(r, colAccSales).Value) <> "" Then dAcc = dAcc + 1
                dPart = dPart + Val(wsSales.Cells(r, colPartSales).Value)
                dAUM = dAUM + Val(wsSales.Cells(r, colAUMSales).Value)
            End If
        Next r
        
        '--------------------------------------------------------------
        ' 8C. Open template presentation
        '--------------------------------------------------------------
        Dim pres As PowerPoint.Presentation
        Set pres = ppApp.Presentations.Open("C:\TemplateFolder\template1.pptx", , , msoFalse)
        
        '--------------------------------------------------------------
        ' 8D. Slide 2 Think‑Cell chart
        '--------------------------------------------------------------
        If Not tc Is Nothing Then
            With wsHelper
                .Range("A1:E3").ClearContents
                .Range("B1:E1").Value = stageLbl
                .Range("A3").Value = ""
                .Range("B3").Resize(, 4).Value = Array(BlankIfZero(stCnt(1)), BlankIfZero(stCnt(2)), _
                                                       BlankIfZero(stCnt(3)), BlankIfZero(stCnt(4)))
            End With
            tc.UpdateChart pres.Slides(2), "Chart1", wsHelper.Range("A1:E3"), False
        End If
        
        '--------------------------------------------------------------
        ' 8E. Slide 1 title / quarter
        '--------------------------------------------------------------
        With pres.Slides(1)
            .Shapes("Title").TextFrame.TextRange.Text = dir
            .Shapes("Quarter").TextFrame.TextRange.Text = _
                "Q" & Int((Month(Date) - 1) / 3 + 1) & " " & Year(Date)
        End With
        
        '--------------------------------------------------------------
        ' 8F. Slide 2 numeric table
        '--------------------------------------------------------------
        Dim tbl5 As PowerPoint.Table: Set tbl5 = pres.Slides(2).Shapes("Table 5").Table
        tbl5.Cell(2, 2).Shape.TextFrame.TextRange.Text = dAcc
        tbl5.Cell(2, 3).Shape.TextFrame.TextRange.Text = totAcc
        tbl5.Cell(2, 4).Shape.TextFrame.TextRange.Text = IIf(totAcc, Format(dAcc / totAcc, "0.0%"), "N/A")
        tbl5.Cell(3, 2).Shape.TextFrame.TextRange.Text = Format(dAUM / 1E9, "$0.00") & "B"
        tbl5.Cell(3, 3).Shape.TextFrame.TextRange.Text = Format(totAUM / 1E9, "$0.00") & "B"
        tbl5.Cell(3, 4).Shape.TextFrame.TextRange.Text = IIf(totAUM, Format(dAUM / totAUM, "0.0%"), "N/A")
        tbl5.Cell(4, 2).Shape.TextFrame.TextRange.Text = dPart
        tbl5.Cell(4, 3).Shape.TextFrame.TextRange.Text = totPart
        tbl5.Cell(4, 4).Shape.TextFrame.TextRange.Text = IIf(totPart, Format(dPart / totPart, "0.0%"), "N/A")
        
        '--------------------------------------------------------------
        ' 8G.  (Slides 3‑4 cross‑sell / upsell – unchanged from earlier)
        '      … you can keep the logic you already had here …
        '--------------------------------------------------------------
        ' ***  (Omitted in this snippet for brevity – keep existing code) ***
        
        '==================================================================
        ' 8H.  NEW  Slide 7 – TableNPS  (Account‑level detail)
        '==================================================================
        Dim shpNPS As PowerPoint.Shape
        On Error Resume Next: Set shpNPS = pres.Slides(7).Shapes("TableNPS"): On Error GoTo 0
        If Not shpNPS Is Nothing Then
            
            Dim tblNPS As PowerPoint.Table: Set tblNPS = shpNPS.Table
            
            ' wipe old data rows, keep header row
            Do While tblNPS.Rows.Count > 1: tblNPS.Rows(tblNPS.Rows.Count).Delete: Loop
            
            Dim rowIx As Long: rowIx = 2
            lastRow = wsSales.Cells(wsSales.Rows.Count, 1).End(xlUp).Row
            
            For r = 2 To lastRow
                If Trim$(wsSales.Cells(r, colDirSales).Value) = dir Then
                    If rowIx > tblNPS.Rows.Count Then tblNPS.Rows.Add
                    tblNPS.Cell(rowIx, 1).Shape.TextFrame.TextRange.Text = _
                        Trim$(wsSales.Cells(r, colAccSales).Value)
                    tblNPS.Cell(rowIx, 2).Shape.TextFrame.TextRange.Text = _
                        Format$(wsSales.Cells(r, colCloseSales).Value, "mm/dd/yyyy")
                    tblNPS.Cell(rowIx, 3).Shape.TextFrame.TextRange.Text = _
                        Trim$(wsSales.Cells(r, colStageSales).Value)
                    tblNPS.Cell(rowIx, 4).Shape.TextFrame.TextRange.Text = _
                        Format$(wsSales.Cells(r, colAUMAcctSales).Value, "$#,##0")
                    tblNPS.Cell(rowIx, 5).Shape.TextFrame.TextRange.Text = _
                        wsSales.Cells(r, colPartSales).Value
                    rowIx = rowIx + 1
                End If
            Next r
        End If
        '==================================================================
        
        '--------------------------------------------------------------
        ' 8I. Save & close
        '--------------------------------------------------------------
        pres.SaveAs "C:\OutputPPTs\" & dir & "_Pipeline.pptx"
        pres.Close
    Next dir
    
    ppApp.Quit
    MsgBox "All PowerPoints generated."
End Sub
