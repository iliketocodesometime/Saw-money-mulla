Option Explicit

Sub UpdateChartsForDirectors_ThinkCell()
    '
    ' 1. REFERENCES TO EXCEL OBJECTS
    '
    Dim wb As Workbook
    Set wb = ThisWorkbook       ' The workbook hosting this VBA code
    
    Dim ws As Worksheet
    Set ws = wb.Sheets("New Plan Pipeline")  ' Make sure spelling matches the actual sheet
    
    '
    ' 2. DETERMINE LAST ROW & DEFINE THE FULL RANGE (INCLUDING HEADER)
    '
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    
    Debug.Print "LastRow in column A:", lastRow
    
    Dim rngAll As Range
    Set rngAll = ws.Range("A1:E" & lastRow)  ' Includes row 1 (header) and columns A:E
    
    Debug.Print "rngAll:", rngAll.Address
    
    '
    ' 3. BUILD A DICTIONARY OF UNIQUE DIRECTORS (COLUMN B)
    '
    Dim dictDir As Object
    Set dictDir = CreateObject("Scripting.Dictionary")
    
    Dim i As Long
    For i = 2 To lastRow
        Dim dirVal As Variant
        dirVal = ws.Cells(i, 2).Value  ' Director is in column B
        
        If Not IsEmpty(dirVal) Then
            If Not dictDir.Exists(dirVal) Then
                dictDir.Add dirVal, True
                Debug.Print "   Adding Director:", dirVal
            End If
        End If
    Next i
    
    '
    ' 4. PREPARE THINK-CELL AND POWERPOINT (ONLY ONCE)
    '
    Dim tcXlAddIn As Object
    Set tcXlAddIn = Application.COMAddIns("thinkcell.addin").Object
      ' Make sure "thinkcell.addin" is the correct COM Add-In name in your Excel
    
    Dim ppApp As Object  ' Late-bound to PowerPoint.Application
    Set ppApp = CreateObject("PowerPoint.Application")
    ppApp.Visible = True   ' (Optional) Make PPT visible so you can watch it run
    
    ' Paths to your files:
    Const templatePath       As String = "C:\Samples\UpdateChart\template.pptx"
    Const saveFolder         As String = "C:\Samples\UpdateChart\"
    Const thinkCellChartName As String = "Chart1"
    
    '
    ' 5. LOOP OVER EACH DIRECTOR
    '
    Dim dirName As Variant
    For Each dirName In dictDir.Keys
        
        Debug.Print vbCrLf & "***** Processing Director:", dirName & " *****"
        
        ' (A) CLEAR OLD FILTER, THEN APPLY NEW FILTER ON COLUMN B
        ws.AutoFilterMode = False
        rngAll.AutoFilter Field:=2, Criteria1:=dirName
        
        ' (B) GET VISIBLE CELLS â€” TAKE CARE NOT TO USE RESUME NEXT FOR TOO LONG
        Dim rngFilter As Range
        On Error Resume Next
            Set rngFilter = rngAll.SpecialCells(xlCellTypeVisible)
        On Error GoTo 0
        
        If rngFilter Is Nothing Then
            Debug.Print "      No visible rows found for", dirName
        Else
            Debug.Print "      Visible cell count:", rngFilter.Count
        End If
        
        ' (C) IF WE GOT FILTERED ROWS, CREATE TEMPDATA AND COUNT STAGES
        If Not rngFilter Is Nothing Then
            
            ' Delete old "TempChartData" if it exists
            On Error Resume Next
            Application.DisplayAlerts = False
            wb.Worksheets("TempChartData").Delete
            Application.DisplayAlerts = True
            On Error GoTo 0
            
            ' New sheet for stage counts
            Dim wsTemp As Worksheet
            Set wsTemp = wb.Worksheets.Add
            wsTemp.Name = "TempChartData"
            
            ' Dictionary for Stage => Count
            Dim dictStage As Object
            Set dictStage = CreateObject("Scripting.Dictionary")
            
            Dim r As Range
            For Each r In rngFilter.Columns(5).Cells   ' Column E is 5
                If r.Row > 1 Then                      ' Skip the header row
                    If Not IsEmpty(r.Value) Then
                        If dictStage.Exists(r.Value) Then
                            dictStage(r.Value) = dictStage(r.Value) + 1
                        Else
                            dictStage.Add r.Value, 1
                        End If
                    End If
                End If
            Next r
            
            ' (D) WRITE STAGES + COUNTS IN wsTemp
            If dictStage.Count > 0 Then
                Dim colPtr As Long: colPtr = 2  ' Start writing at column B
                Dim key As Variant
                
                For Each key In dictStage.Keys
                    wsTemp.Cells(1, colPtr).Value = key
                    wsTemp.Cells(3, colPtr).Value = dictStage(key)
                    colPtr = colPtr + 1
                Next key
                
                ' The final range for think-cell: row 1..3, columns B..(colPtr-1)
                Dim rngChart As Range
                Set rngChart = wsTemp.Range(wsTemp.Cells(1, 2), _
                                             wsTemp.Cells(3, colPtr - 1))
                
                Debug.Print "      Chart range:", rngChart.Address
                
                '
                ' (E) OPEN TEMPLATE, UPDATE CHART, SAVE
                '
                Dim pres As Object  ' Late-bound to PowerPoint.Presentation
                Set pres = ppApp.Presentations.Open(templatePath, , True)
                
                ' Provide the named chart in that PPT, along with your range
                tcXlAddIn.UpdateChart pres, thinkCellChartName, rngChart, False
                
                ' Save under a new name, e.g. "John Smith_updated.pptx"
                Dim outPath As String
                outPath = saveFolder & dirName & "_updated.pptx"
                pres.SaveAs outPath
                Debug.Print "      Saved PPT:", outPath
                
                pres.Close
            Else
                Debug.Print "      No stages found for director", dirName
            End If
        End If
        
        ' (F) CLEAR FILTER BEFORE NEXT DIRECTOR
        ws.AutoFilterMode = False
    Next dirName
    
    '
    ' 6. QUIT POWERPOINT ONCE ALL DIRECTORS ARE DONE
    '
    ppApp.Quit
    MsgBox "All Director-specific presentations have been created.", vbInformation
End Sub
