# Function to format JPN from df to match df2 format
def format_jpn(jpn):
    return jpn.replace('-', '0')

# Function to remove trailing zeros from JPNs in df2
def remove_trailing_zeros(jpn):
    return str(jpn).rstrip('0')

# Create a new column in df with formatted JPNs
df['Formatted JPN'] = df['Gallagher JPN List'].apply(format_jpn)

# Convert to strings and remove trailing zeros in df2 columns
df2['jpn'] = df2['jpn'].apply(remove_trailing_zeros)
df2['jpn_prim'] = df2['jpn_prim'].apply(remove_trailing_zeros)
df2['jpn_sec'] = df2['jpn_sec'].apply(remove_trailing_zeros)

# Ensure both are strings
df['Formatted JPN'] = df['Formatted JPN'].astype(str)
df2['jpn'] = df2['jpn'].astype(str)
df2['jpn_prim'] = df2['jpn_prim'].astype(str)
df2['jpn_sec'] = df2['jpn_sec'].astype(str)

# Initialize lists to store results
found_jpns = []
not_found_jpns = []

# Check each JPN in df against df2
for jpn in df['Formatted JPN']:
    if ((df2['jpn'] == jpn).any() or (df2['jpn_prim'] == jpn).any() or (df2['jpn_sec'] == jpn).any()):
        found_jpns.append(jpn)
    else:
        not_found_jpns.append(jpn)

# Create resulting data frames
df_found = df[df['Formatted JPN'].isin(found_jpns)].copy()
df_not_found = df[df['Formatted JPN'].isin(not_found_jpns)].copy()

# Drop the formatted column if you don't need it in the final output
df_found.drop(columns=['Formatted JPN'], inplace=True)
df_not_found.drop(columns=['Formatted JPN'], inplace=True)

# Display the resulting data frames
print("JPNs found in df2:")
print(df_found)

print("\nJPNs not found in df2:")
print(df_not_found)
