Option Explicit

Sub UpdateChartsForDirectors()

    ' ----------------------------------------------------------------------
    ' 1. Identify the workbook and data sheet
    ' ----------------------------------------------------------------------
    Dim wb As Workbook
    Set wb = ThisWorkbook
        ' "ThisWorkbook" = the workbook containing this VBA code.

    Dim ws As Worksheet
    Set ws = wb.Sheets("New Plan Pipeline")
        ' Change the sheet name if needed. This should match exactly.

    ' ----------------------------------------------------------------------
    ' 2. Determine the last used row in column A
    ' ----------------------------------------------------------------------
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
        ' Looks from the bottom of column A upward, finding the first non-blank.

    ' Debugging tip: See which row was found
    Debug.Print "LastRow in Column A:", lastRow

    ' ----------------------------------------------------------------------
    ' 3. Define the entire data range (header + data)
    ' ----------------------------------------------------------------------
    Dim rngAll As Range
    Set rngAll = ws.Range("A1:E" & lastRow)
        ' This includes row 1 (headers) through the final data row.

    ' Debugging tip: See if rngAll is correct
    Debug.Print "rngAll Address:", rngAll.Address

    ' ----------------------------------------------------------------------
    ' 4. Build a dictionary of unique Directors (column B)
    ' ----------------------------------------------------------------------
    Dim dictDir As Object
    Set dictDir = CreateObject("Scripting.Dictionary")

    Dim i As Long
    For i = 2 To lastRow
        ' We skip row 1 because itâ€™s the header row.
        
        Dim directorName As Variant
        directorName = ws.Cells(i, 2).Value
        
        If Not IsEmpty(directorName) Then
            If Not dictDir.Exists(directorName) Then
                dictDir.Add directorName, True
                ' Debugging tip: See which Directors are being added:
                Debug.Print "Director added:", directorName
            End If
        End If
    Next i

    ' ----------------------------------------------------------------------
    ' 5. Prepare Think-Cell and PowerPoint
    ' ----------------------------------------------------------------------
    Dim tcXlAddIn As Object
    Set tcXlAddIn = Application.COMAddIns("thinkcell.addin").Object
        ' Make sure "thinkcell.addin" is the correct name in your COM Add-Ins.

    Dim ppApp As Object
    Set ppApp = CreateObject("PowerPoint.Application")
        ' Starts PowerPoint in the background.

    ' Paths for the PPT template and output folder:
    Const templatePath       As String = "C:\Samples\UpdateChart\template.pptx"
    Const saveFolder         As String = "C:\Samples\UpdateChart\"
    Const thinkCellChartName As String = "Chart1"

    ' ----------------------------------------------------------------------
    ' 6. Loop over each Director, filter the data, and build the chart
    ' ----------------------------------------------------------------------
    Dim dirName As Variant, rngFilter As Range
    Dim pres As Object

    For Each dirName In dictDir.Keys
        
        ' (A) Clear any previous filter
        ws.AutoFilterMode = False

        ' (B) Apply filter on column B (Director)
        rngAll.AutoFilter Field:=2, Criteria1:=dirName
            ' Field:=2 because column B is the second column in rngAll.

        ' (C) Get the visible cells after the filter
        On Error Resume Next
        Set rngFilter = rngAll.SpecialCells(xlCellTypeVisible)
        On Error GoTo 0

        ' Debugging tip: Check how many cells/rows are visible
        If Not rngFilter Is Nothing Then
            Debug.Print "Director:", dirName, _
                        "Visible cells:", rngFilter.Count, _
                        "Visible areas:", rngFilter.Areas.Count
        Else
            Debug.Print "Director:", dirName, "No visible cells."
        End If

        ' (D) If we have filtered rows
        If Not rngFilter Is Nothing Then
            
            ' Remove old "TempChartData" if it exists
            On Error Resume Next
            Application.DisplayAlerts = False
            wb.Worksheets("TempChartData").Delete
            Application.DisplayAlerts = True
            On Error GoTo 0

            ' Create a fresh TempChartData sheet
            Dim wsTemp As Worksheet
            Set wsTemp = wb.Worksheets.Add
            wsTemp.Name = "TempChartData"
            
            ' Dictionary to count Stages
            Dim dictStage As Object
            Set dictStage = CreateObject("Scripting.Dictionary")
            
            ' (E) Loop through column E (Stage) within the filtered area
            Dim r As Range
            For Each r In rngFilter.Columns(5).Cells
                ' Skip the header row (row 1)
                If r.Row > 1 Then
                    If Not IsEmpty(r.Value) Then
                        If dictStage.Exists(r.Value) Then
                            dictStage(r.Value) = dictStage(r.Value) + 1
                        Else
                            dictStage.Add r.Value, 1
                        End If
                    End If
                End If
            Next r
            
            ' (F) If we found at least one Stage
            If dictStage.Count > 0 Then
                
                ' Place Stages in row 1, counts in row 3
                Dim colPtr As Long: colPtr = 2  ' Starting at column B
                Dim key As Variant
                
                For Each key In dictStage.Keys
                    wsTemp.Cells(1, colPtr).Value = key
                    wsTemp.Cells(3, colPtr).Value = dictStage(key)
                    colPtr = colPtr + 1
                Next key
                
                ' Define the range for Think-Cell: from B1..B3 up to the last column
                Dim rngChart As Range
                Set rngChart = wsTemp.Range(wsTemp.Cells(1, 2), _
                                            wsTemp.Cells(3, colPtr - 1))
                
                ' (G) Open the template PPT (read-only), update chart, save
                Set pres = ppApp.Presentations.Open(templatePath, , True)
                
                tcXlAddIn.UpdateChart pres, thinkCellChartName, rngChart, False
                
                ' Save to the chosen folder
                pres.SaveAs saveFolder & dirName & "_updated.pptx"
                pres.Close
            End If
        End If
        
        ' Clear the filter before moving to the next Director
        ws.AutoFilterMode = False
        Set rngFilter = Nothing
    Next dirName
    
    ' ----------------------------------------------------------------------
    ' 7. Quit PowerPoint and final message
    ' ----------------------------------------------------------------------
    ppApp.Quit
    MsgBox "All Director-specific presentations have been created."
End Sub
