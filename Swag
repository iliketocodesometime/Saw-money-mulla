import pandas as pd

def join_on_multiple_columns(df1, df2, cols1, cols2):
    result = pd.DataFrame(columns=df1.columns.union(df2.columns))
    
    for index, row in df1.iterrows():
        match = df2[(df2[cols2[0]] == row[cols1[0]]) |
                    (df2[cols2[1]] == row[cols1[1]]) |
                    (df2[cols2[2]] == row[cols1[2]]) |
                    (df2[cols2[3]] == row[cols1[3]])]
        
        if not match.empty:
            match = match.iloc[0]  # Get the first matching row
            combined_row = pd.concat([row, match])
            result = result.append(combined_row, ignore_index=True)
    
    return result

# Example usage:
# df1 = pd.DataFrame({...})
# df2 = pd.DataFrame({...})
# cols1 = ['column1', 'column2', 'column3', 'column4']
# cols2 = ['column5', 'column6', 'column7', 'column8']
# result_df = join_on_multiple_columns(df1, df2, cols1, cols2)

