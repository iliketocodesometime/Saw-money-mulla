import pandas as pd
import numpy as np

# Define the Haversine formula to calculate distances between two points on Earth
def haversine(lon1, lat1, lon2, lat2):
    # convert decimal degrees to radians
    lon1, lat1, lon2, lat2 = map(np.radians, [lon1, lat1, lon2, lat2])
    # haversine formula
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = np.sin(dlat/2)**2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlon/2)**2
    c = 2 * np.arcsin(np.sqrt(a))
    r = 3956 # Radius of Earth in miles. Use 6371 for kilometers
    return c * r

# Example dataset

df = pd.DataFrame(data)

# Distance threshold in miles
n_miles = 100

# Initialize a new column with empty lists
df['Branch City New'] = [[] for _ in range(len(df))]

# Calculate distances and update the new column
for i in range(len(df)):
    for j in range(len(df)):
        if i != j and haversine(df.loc[i, 'Base City Lon'], df.loc[i, 'Base City Lat'], df.loc[j, 'Base City Lon'], df.loc[j, 'Base City Lat']) <= n_miles:
            df.at[i, 'Branch City New'].append(df.loc[j, 'Branch City'])

# Remove duplicates and convert lists to semicolon-delimited strings
df['Branch City New'] = df['Branch City New'].apply(lambda x: '; '.join(sorted(set(x))))

