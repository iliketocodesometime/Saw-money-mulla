# Ensure dt2_report is a datetime column
input_df['dt2_report'] = pd.to_datetime(input_df['dt2_report'])

# Identify the most recent year in the dataset
most_recent_year = input_df['dt2_report'].dt.year.max()

# Filter the dataset for the most recent year and the previous year
recent_year_df = input_df[input_df['dt2_report'].dt.year == most_recent_year]
previous_year_df = input_df[input_df['dt2_report'].dt.year == most_recent_year - 1]

# Find the max business day for each month in the previous year
max_bd_previous_year = previous_year_df.groupby(previous_year_df['dt2_report'].dt.month)['business_day'].max()

# Initialize the adjusted business day column
recent_year_df['adjusted_business_day'] = None

# Adjust business days for the most recent year
current_bd = 0
for month in range(1, 13):  # Loop through each month
    month_df = recent_year_df[recent_year_df['dt2_report'].dt.month == month]
    if not month_df.empty:
        # Start from the adjusted value if month-end was adjusted
        if month > 1:
            current_bd = max_bd_previous_year.get(month - 1, current_bd)
        for day in sorted(month_df['dt2_report'].unique()):
            current_bd += 1
            # Adjust for month-end
            if day == month_df['dt2_report'].max():
                current_bd = max(current_bd, max_bd_previous_year.get(month, current_bd))
            recent_year_df.loc[recent_year_df['dt2_report'] == day, 'adjusted_business_day'] = current_bd
