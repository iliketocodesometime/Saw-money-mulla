import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the data
data = pd.read_csv('your_data_file.csv')

# Calculate the percentage ownership of each SPD team within each sector
sector_spd_breakdown = data.groupby(['IB Sector Final', 'Director']).size().unstack().fillna(0)
sector_spd_percentage = sector_spd_breakdown.div(sector_spd_breakdown.sum(axis=1), axis=0) * 100

# Sort by the highest percentage ownership and within each sector sort the bars
sector_spd_percentage = sector_spd_percentage.apply(lambda x: x.sort_values(ascending=False), axis=1)
sorted_sectors = sector_spd_percentage.max(axis=1).sort_values(ascending=False).index
sector_spd_percentage = sector_spd_percentage.loc[sorted_sectors]

# Plot the stacked bar chart
fig, ax = plt.subplots(figsize=(14, 7))
sector_spd_percentage.plot(kind='bar', stacked=True, ax=ax, colormap='viridis')

# Add percentage labels and total count of clients
for container in ax.containers:
    labels = [f'{v:.1f}%' if v > 0 else '' for v in container.datavalues]
    ax.bar_label(container, labels=labels, label_type='center', color='white')

# Add total count of clients at the top of each bar
totals = sector_spd_breakdown.sum(axis=1)
for i, total in enumerate(totals):
    ax.text(i, 105, f'{total}', ha='center', va='bottom', fontweight='bold')

plt.title('Sector Breakdown by SPD Team')
plt.xlabel('Sector')
plt.ylabel('Percentage Ownership')
plt.legend(title='SPD Team', loc='upper left', bbox_to_anchor=(1, 1), fontsize='small')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

# Parse the MSAW Open Opportunities column
data['MSAW Open Opportunities'] = data['MSAW Open Opportunities'].fillna('')
data['Open Opportunities List'] = data['MSAW Open Opportunities'].str.split(';')

# Explode the list into separate rows
exploded_opportunities = data.explode('Open Opportunities List')

# Count occurrences of each opportunity by director
opportunity_counts = exploded_opportunities.groupby(['Director', 'Open Opportunities List']).size().unstack().fillna(0)

# Plot the opportunity counts
fig, ax = plt.subplots(figsize=(14, 7))
opportunity_counts.plot(kind='bar', stacked=True, ax=ax, colormap='viridis')

# Add total count of opportunities at the top of each bar
totals_opportunities = opportunity_counts.sum(axis=1)
for i, total in enumerate(totals_opportunities):
    ax.text(i, max(totals_opportunities) * 1.05, f'{total}', ha='center', va='bottom', fontweight='bold')

plt.title('MSAW Open Opportunities by Director')
plt.xlabel('Director')
plt.ylabel('Count of Opportunities')
plt.legend(title='Opportunity', loc='upper left', bbox_to_anchor=(1, 1), fontsize='small')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()
