import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import LabelEncoder, StandardScaler
from wordcloud import WordCloud

# Load Data (Replace 'your_file.csv' with the actual file path)
data = pd.read_csv('your_file.csv')

# Data Preprocessing
# Converting categorical data into numerical labels
le_segment = LabelEncoder()
data['Market Segment'] = le_segment.fit_transform(data['Market Segment'])

le_ownership = LabelEncoder()
data['Ownership'] = le_ownership.fit_transform(data['Ownership'])

# Handle concatenated list of products and opportunities
# Create exploded view of the products each client has
exploded_products = data.assign(MSAW_Client_Relationships=data['MSAW Client Relationships'].str.split(',')).explode('MSAW_Client_Relationships')
exploded_opportunities = data.assign(MSAW_Open_Opportunities=data['MSAW Open Opportunities'].str.split(',')).explode('MSAW_Open_Opportunities')

# Show exploded views
print("Exploded View of Products:\n", exploded_products.head())
print("Exploded View of Opportunities:\n", exploded_opportunities.head())

# Analyzing Trends Using Machine Learning
# Create features for clustering
features = data[['Market Segment', 'Ownership']]
scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

# Applying KMeans Clustering to find patterns
kmeans = KMeans(n_clusters=3, random_state=42)
data['cluster'] = kmeans.fit_predict(scaled_features)

# Analyze trends by cluster
trends = data.groupby('cluster').mean()
print("Trends Based on Clusters:\n", trends)

# Visualize Clusters
plt.scatter(scaled_features[:, 0], scaled_features[:, 1], c=data['cluster'], cmap='viridis')
plt.xlabel('Market Segment')
plt.ylabel('Ownership')
plt.title('Client Clustering by Market Segment and Ownership')
plt.show()

# Generating a Word Cloud for Client Satisfaction
def generate_wordcloud(text, title):
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(' '.join(text))
    plt.figure(figsize=(10, 5))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title(title)
    plt.show()

# Create word cloud for client satisfaction
generate_wordcloud(data['Client Satisfaction Status (Account)'].dropna(), 'Client Satisfaction Overview')

# Creating a Report Summary
report = """
Client Analysis Report Summary
=================================
- Exploded Views:
  - Products owned by clients and opportunities are listed by each client.
- Trends Identified:
  - Machine Learning clustering has grouped clients based on market segment and ownership.
  - Distinct patterns have emerged, potentially showing a different affinity for products based on market and ownership.
- Client Satisfaction:
  - A word cloud visualization highlights key sentiments (Green, Yellow, Red) used by clients.
"""
print(report)

# Save Report to File
with open('client_analysis_report.txt', 'w') as f:
    f.write(report)
